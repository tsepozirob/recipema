{
  "system_prompts": {
    "recipe_generator": {
      "content": "You are a professional chef and recipe creator. Generate recipes in EXACTLY the JSON format specified. Return ONLY valid JSON, no additional text or markdown formatting.\n\nIMPORTANT RULES:\n1. Return ONLY the JSON object, no markdown code blocks\n2. All string values must be properly escaped\n3. timer_seconds should be 0 unless timing is critical for the step\n4. voice_hint should be concise, helpful cooking tips\n5. Ensure all nutrition values are realistic numbers\n6. Include practical substitutions if common ingredients are unavailable\n7. allergen_warnings should list major allergens present\n8. All measurements should be clear and specific",
      "temperature": 0.2,
      "max_tokens": 1200
    }
  },
  "user_prompt_templates": {
    "basic_recipe": "Create a recipe using these ingredients: {{ingredients}}.\n\nRequirements:\n- Cooking time: approximately {{time_minutes}} minutes\n- Servings: {{servings}}\n- Dietary constraints: {{constraints}}\n- Available equipment: {{equipment}}\n\nReturn the recipe in this EXACT JSON format:\n{\n  \"title\": \"Recipe Name\",\n  \"summary\": \"Brief description of the dish\",\n  \"ingredients\": [{\"name\": \"ingredient\", \"amount\": \"quantity\", \"notes\": \"optional notes\"}],\n  \"steps\": [{\"order\": 1, \"instruction\": \"detailed step\", \"timer_seconds\": 300, \"voice_hint\": \"helpful tip\"}],\n  \"prep_minutes\": 15,\n  \"cook_minutes\": 20,\n  \"total_minutes\": 35,\n  \"servings\": {{servings}},\n  \"nutrition\": {\"calories\": 400, \"protein_g\": 25, \"fat_g\": 15, \"carbs_g\": 45},\n  \"substitutions\": [{\"missing\": \"ingredient\", \"replacement\": \"alternative\", \"notes\": \"substitution notes\"}],\n  \"allergen_warnings\": [\"list\", \"of\", \"allergens\"],\n  \"sources\": [{\"label\": \"Traditional\", \"url\": \"\"}]\n}",
    
    "dietary_specific": "Create a {{dietary_type}} recipe using these ingredients: {{ingredients}}.\n\nSpecific requirements:\n- Must be {{dietary_type}} compliant\n- Cooking time: approximately {{time_minutes}} minutes\n- Servings: {{servings}}\n- Additional constraints: {{constraints}}\n\nEnsure the recipe follows {{dietary_type}} guidelines strictly and include appropriate substitutions for non-compliant ingredients.\n\nReturn in the exact JSON format specified.",
    
    "quick_recipe": "Create a quick and easy recipe using: {{ingredients}}.\n\nConstraints:\n- Maximum {{time_minutes}} minutes total time\n- Minimal prep work required\n- Simple cooking techniques only\n- Servings: {{servings}}\n\nFocus on efficiency and simplicity while maintaining flavor.\n\nReturn in the exact JSON format specified."
  },
  "response_format": {
    "type": "json_object",
    "schema": {
      "type": "object",
      "required": ["title", "summary", "ingredients", "steps", "prep_minutes", "cook_minutes", "total_minutes", "servings", "nutrition"],
      "properties": {
        "title": {"type": "string", "maxLength": 100},
        "summary": {"type": "string", "maxLength": 300},
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "amount"],
            "properties": {
              "name": {"type": "string", "maxLength": 100},
              "amount": {"type": "string", "maxLength": 50},
              "notes": {"type": "string", "maxLength": 200}
            }
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["order", "instruction"],
            "properties": {
              "order": {"type": "integer", "minimum": 1},
              "instruction": {"type": "string", "maxLength": 500},
              "timer_seconds": {"type": "integer", "minimum": 0},
              "voice_hint": {"type": "string", "maxLength": 200}
            }
          }
        },
        "prep_minutes": {"type": "integer", "minimum": 0},
        "cook_minutes": {"type": "integer", "minimum": 0},
        "total_minutes": {"type": "integer", "minimum": 0},
        "servings": {"type": "integer", "minimum": 1},
        "nutrition": {
          "type": "object",
          "required": ["calories", "protein_g", "fat_g", "carbs_g"],
          "properties": {
            "calories": {"type": "integer", "minimum": 0},
            "protein_g": {"type": "number", "minimum": 0},
            "fat_g": {"type": "number", "minimum": 0},
            "carbs_g": {"type": "number", "minimum": 0}
          }
        },
        "substitutions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["missing", "replacement"],
            "properties": {
              "missing": {"type": "string"},
              "replacement": {"type": "string"},
              "notes": {"type": "string"}
            }
          }
        },
        "allergen_warnings": {
          "type": "array",
          "items": {"type": "string"}
        },
        "sources": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {"type": "string"},
              "url": {"type": "string"}
            }
          }
        }
      }
    }
  },
  "example_requests": {
    "curl": "curl -X POST 'https://api.deepseek.com/v1/chat/completions' \\\n  -H 'Authorization: Bearer YOUR_API_KEY' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"model\": \"deepseek-chat\",\n    \"messages\": [\n      {\"role\": \"system\", \"content\": \"SYSTEM_PROMPT_HERE\"},\n      {\"role\": \"user\", \"content\": \"USER_PROMPT_HERE\"}\n    ],\n    \"temperature\": 0.2,\n    \"max_tokens\": 1200,\n    \"response_format\": {\"type\": \"json_object\"}\n  }'",
    
    "javascript": "const response = await fetch('https://api.deepseek.com/v1/chat/completions', {\n  method: 'POST',\n  headers: {\n    'Authorization': `Bearer ${process.env.DEEPSEEK_API_KEY}`,\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    model: 'deepseek-chat',\n    messages: [\n      { role: 'system', content: systemPrompt },\n      { role: 'user', content: userPrompt }\n    ],\n    temperature: 0.2,\n    max_tokens: 1200,\n    response_format: { type: 'json_object' }\n  })\n});\n\nconst data = await response.json();\nconst recipe = JSON.parse(data.choices[0].message.content);"
  }
}